name: build and test

on:
  push:
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    steps:
      - name: check out code
        uses: actions/checkout@v2
      - name: setup Go 1.16
        id: go
        uses: actions/setup-go@v2
        with:
          go-version: ^1.16

      - name: build
        run: make build
      - name: lint
        uses: golangci/golangci-lint-action@v2
        with:
          # Required: the version of golangci-lint is required and must be specified without patch version: we always use the latest patch version.
          version: v1.29

      - name: run Unit tests.
        run: go test  ./... -v -covermode=count -coverprofile=coverage.txt
      - name: upload Coverage report to CodeCov
        uses: codecov/codecov-action@v1.0.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.txt

  release:
    name: release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    needs:
      - build
    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16
      - name: set GOVERSION
        env:
            ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
        run: echo "::set-env name=GOVERSION::$(go version | sed -r 's/go version go(.*)\ .*/\1/')"
      - name: set AirVersion
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}

      - name: run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: cosmtrek/air:${{ env.VERSION }}
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}